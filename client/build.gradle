plugins {
    id 'java'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.6.20'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.20'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.8.2'
}

sourceCompatibility = '18'
targetCompatibility = '18'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.example.client'
    mainClass = 'com.example.client.TodoApplication'
}

[compileKotlin, compileTestKotlin].forEach {
    it.kotlinOptions {
        jvmTarget = '11'
    }
}

javafx {
    version = '18.0.1'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    implementation('org.kordamp.ikonli:ikonli-javafx:12.3.1')
    implementation('org.kordamp.ikonli:ikonli-bootstrapicons-pack:12.3.1')
    implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')
    implementation("org.controlsfx:controlsfx:11.1.2")
    implementation("no.tornado:tornadofx:1.7.20")
    implementation('org.jetbrains.kotlin:kotlin-test')
    implementation('org.jetbrains.kotlin:kotlin-test-junit5')
    implementation('org.xerial:sqlite-jdbc:3.39.3.0')
    implementation('org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1')
    implementation('org.json:json:20171018')
    implementation 'com.beust:klaxon:5.5'


    testImplementation('org.jetbrains.kotlin:kotlin-test')
    testImplementation('org.jetbrains.kotlin:kotlin-test-junit5')
    testImplementation 'org.testng:testng:7.1.0'
}

test {
    useJUnitPlatform()
}

jlink {
    mergedModule {
        requires 'javafx.controls';
        requires 'java.json';
        requires 'java.logging';
        requires 'java.sql';
        requires 'java.prefs';
        requires 'java.desktop';
        requires 'javafx.fxml';
        uses 'tornadofx.Stylesheet';
        uses 'tornadofx.ChildInterceptor';
        provides 'java.sql.Driver' with 'org.sqlite.JDBC';
    }

    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}
